version: "2"

services:
  mariadb:
    image: wodby/mariadb:10.1-2.3.3
    env_file:
      - docker-compose.env
#    volumes:
#      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
#      - /path/to/mariadb/data/on/host:/var/lib/mysql # I want to manage volumes manually.

  php:
# 1. Images with vanilla Drupal – wodby/drupal:[DRUPAL_VERSION]-[PHP_VERSION]-[STABILITY_TAG].
#    image: wodby/drupal:8-7.1-2.4.4
#    image: wodby/drupal:8-7.0-2.4.4
#    image: wodby/drupal:7-7.1-2.4.4
#    image: wodby/drupal:7-7.0-2.4.4
#    image: wodby/drupal:7-5.6-2.4.4
#    image: wodby/drupal:6-5.6-2.4.4
#    image: wodby/drupal:6-5.3-2.4.4
# 2. Images without Drupal – wodby/drupal-php:[PHP_VERSION]-[STABILITY_TAG].
    image: wodby/drupal-php:7.1-2.4.3
#    image: wodby/drupal-php:7.0-2.4.3
#    image: wodby/drupal-php:5.6-2.4.3
#    image: wodby/drupal-php:5.3-2.4.3
    env_file:
      - docker-compose.env
    volumes:
      - ./:/var/www/html:cached # User-guided caching

  nginx:
# wodby/drupal-nginx:[DRUPAL_VERSION]-[NGINX_VERSION]-[STABILITY_TAG].
    image: wodby/drupal-nginx:8-1.13-2.4.2
#    image: wodby/drupal-nginx:7-1.13-2.4.2
#    image: wodby/drupal-nginx:6-1.13-2.4.2
#    image: wodby/drupal-nginx:8-1.12-2.4.2
#    image: wodby/drupal-nginx:7-1.12-2.4.2
#    image: wodby/drupal-nginx:6-1.12-2.4.2
    depends_on:
      - php
    env_file:
      - docker-compose.env
    volumes:
      - ./:/var/www/html:cached
    labels:
      - 'traefik.backend=nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:nginx.drupal.docker.localhost'

  apache:
    image: wodby/drupal-apache:2.4-1.0.2
    depends_on:
      - php
    env_file:
      - docker-compose.env
    volumes:
      - ./:/var/www/html:cached
    labels:
      - 'traefik.backend=apache'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:apache.drupal.docker.localhost'

#  varnish:
#    image: wodby/drupal-varnish:4.1-2.1.2
#    depends_on:
#      - nginx
#    env_file:
#      - docker-compose.env
#    labels:
#      - 'traefik.backend=varnish'
#      - 'traefik.port=6081'
#      - 'traefik.frontend.rule=Host:varnish.drupal.docker.localhost'

#  redis:
#    image: wodby/redis:3.2-2.1.2

#  adminer:
#    image: wodby/adminer:4.3-1.1.0
#    env_file:
#      - docker-compose.env
#    labels:
#      - 'traefik.backend=adminer'
#      - 'traefik.port=9000'
#      - 'traefik.frontend.rule=Host:adminer.drupal.docker.localhost'

#  pma:
#    image: phpmyadmin/phpmyadmin
#    env_file:
#      - docker-compose.env
#    labels:
#      - 'traefik.backend=pma'
#      - 'traefik.port=80'
#      - 'traefik.frontend.rule=Host:pma.drupal.docker.localhost'

#  solr:
## wodby/drupal-solr:[DRUPAL_VERSION]-[SOLR_VERSION]-[STABILITY_TAG].
#    image: wodby/drupal-solr:8-6.6-2.2.0
##    image: wodby/drupal-solr:8-6.5-2.2.0
##    image: wodby/drupal-solr:8-6.4-2.2.0
##    image: wodby/drupal-solr:8-6.3-2.2.0
##    image: wodby/drupal-solr:8-5.5-2.2.0
##    image: wodby/drupal-solr:7-5.4-2.2.0
#    env_file:
#      - docker-compose.env
#    labels:
#      - 'traefik.backend=solr'
#      - 'traefik.port=8983'
#      - 'traefik.frontend.rule=Host:solr.drupal.docker.localhost'

  mailhog:
    image: mailhog/mailhog
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.drupal.docker.localhost'

#  nodejs:
#    image: wodby/drupal-node:1.0-1.0.0
#    env_file:
#      - docker-compose.env
#    labels:
#      - 'traefik.backend=nodejs'
#      - 'traefik.port=8080'
#      - 'traefik.frontend.rule=Host:nodejs.drupal.docker.localhost'
#    volumes:
#      - ./path/to/your/single-page-app:/app
#    command: sh -c 'npm install && npm run start'

#  node:
#    image: node:alpine
#    working_dir: /app
#    labels:
#      - 'traefik.backend=node'
#      - 'traefik.port=3000'
#      - 'traefik.frontend.rule=Host:front.drupal.docker.localhost'
#    expose:
#      - "3000"
#    volumes:
#      - ./path/to/your/single-page-app:/app
#    command: sh -c 'npm install && npm run start'

#  memcached:
#    image: wodby/memcached:1.4-2.0.0

#  rsyslog:
#    image: wodby/rsyslog

#  athenapdf:
#    image: arachnysdocker/athenapdf-service
#    env_file:
#      - docker-compose.env
